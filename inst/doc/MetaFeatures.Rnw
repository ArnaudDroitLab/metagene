%\VignetteIndexEntry{The MetaFeatures users guide}
%\VignetteKeywords{ChIP-Seq, Metagene, bootstrap}
%\VignettePackage{MetaFeatures}
\documentclass[11pt]{article}
\usepackage{hyperref}
\usepackage{url}
\usepackage{color, pdfcolmk}
\usepackage[super,square]{natbib}
\bibliographystyle{plainnat}
\newcommand{\scscst}{\scriptscriptstyle}
\newcommand{\scst}{\scriptstyle}

\author{Charles Joly Beauparlant\footnote{charles.joly-beauparlant@crchul.ulaval.ca}, Fabien Claude Lamaze\footnote{fabien.lamaze.1@ulaval.ca}, Rawane Samb\footnote{rawane.samb.1@ulaval.ca}, Astrid-Louise Deschenes\footnote{Astrid-Louise.Deschenes@crchudequebec.ulaval.ca}, Arnaud Droit\footnote{arnaud.droit@crchuq.ulaval.ca}}

\begin{document}
\title{MetaFeatures: A package to produce Metafeature plots}
\maketitle



\textnormal {\normalfont}
Introduction to MetaFeatures

\tableofcontents
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
\newpage


\section{Licensing}

This package and the underlying MetaFeatures code are distributed under the Artistic license 1.0. You are free to use and redistribute this software. 

\section{Introduction}

This package produces Metagene-like plots to compare the behavior of DNA-interacting proteins at selected groups of features. A typical analysis can be done in viscinity of transcription start sites (TSS) of genes or at any regions of interest (such as enhancers). Multiple combination of group of features and/or group of bam files can be compared in a single analysis. Bootstraping analysis is used to compare the groups and locate regions with statistically different enrichment profiles. In order to increase the sensitivity of the analysis, alignment data is used instead of peaks produced with peak callers (i.e.: MACS2 or PICS). The MetaFeatures package uses bootstrap to obtain a better estimation of the mean enrichment and the confidence interval for every group of samples.

\section{Parsing input files}

The main input of the MetaFeatures package are alignment files in bam format. It is also possible to include a design file to represent the relations between samples (replicates and controls). The regions to analyse can be either in bed format (for user-specified regions) or in emsembl gene id format (in which case, the analysis will be done around the TSS of the genes).

\subsection{Alignment files}
There is no hard limit in the number of bam files that can be included in an analysis (but with too many bam files, memory limit may become an issue). To speed up the analysis, it is best to (but not mandatory) to index bam files before starting the analysis. If no index is found for a file, the MetaFeatures package will use Rsamtools to sort and index it.

\subsection{Design file}
If you want to include replicates and control into an analysis, you will have to produce a design file to represent the relationship between every samples. A design file must contain the following columns:
\begin{enumerate}
\item The list of every bam files for the analysis.
\item One column per group of files (replicates and/or controls). 0: ignore file, 1: input, 2: control.
\end{enumerate}

The file must also contain a header. It is recommander to use Samples for the name of the first column, but the value is not checked. The other columns in the design file will be used for naming groups, and must unique.

\subsection{Ensembl gene id files}
It is possible to give MetaFeatures text file that contains a list of ensembl gene id as input. The files must be formated in the following way:
\begin{enumerate}
\item The first line must be the name of the group (called features groups).
\item The other lines must be the ensembl gene ids, one id per line.
\end{enumerate}

When there are multiple design groups and features groups, the MetaFeature package will produce a group for every possible combinations of the two.

\subsection{Bed files}
If you want to compare custom regions, it is possible to use a list of one or more bed files.

\section{Parsing features}
To parse the sequences overlapping a list of features, you must use the \code{parseFeatures} function:
\code{groups <- parseFeatures(c("file1.bam", "file2.bam"), c("featureFile1.txt", "featureFile2.txt"))}

If no feature files are provided, the package will use every known TSS for the selected specie (use the \code{specie} argument, default value: "human")

By default, 5000 base pairs aroud each TSS will be used, but this can be changed with the \code{maxDistance} argument.

\section{Parsing regions}
Parsing regions is very similar to parsing features, except that we must use bed files instead of features files:
\code{groups <- parseRegions(c("file1.bed", "file2.bed"), c("file1.bam", "file2.bam"))}

Since the regions will most likely have different length, MetaFeatures will scale them so they all have the length of the median region to allow the bootstrapping analysis.

There is no \code{maxDistance} argument because the size of the regions are already defined in the bed files. It is possible to add paddings on each side of every regions with the \code{paddingSize} argument. Please note that the padding is added after the main regions are scaled.

\section{Plotting the results}
During the plotting step, it is possible to specify which groups of features or regions to add into the plot. The results of the \code{parseFeatures} or \code{parseRegions} can be used directly by the \code{plotMatrices} function.

Before producing the plot, the MetaFeatures package will do a bootstrap analysis to obtain better estimates of the mean and confidence intervals for each groups. This step can be computationally expensive and the running time will direfctly depend on the \code{binSize} and \code{sampleSize} arguments.

You must use a \code{list} object to represent the groups to use and how to name them.

Usage example:
\code{DF <- plotMatrices(list(group1=c("file1", "file2"), group2=(c("file3", "file4"), groups)))}

The \code{plotMatrices} function returns the \code{data.frame} that was used with ggplot2 to produce the results.

\end{document}
